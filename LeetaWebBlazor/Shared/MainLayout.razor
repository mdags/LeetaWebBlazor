@inherits LayoutComponentBase
@using Blazored.Toast.Configuration

<AuthorizeView>
    <Authorized>
        <div class="wrapper">
            <nav class="main-header navbar navbar-expand navbar-white navbar-light">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                    </li>
                </ul>

                <ul class="navbar-nav ml-auto">
                    <li class="nav-item dropdown">
                        <button @onclick="LogoutUserRequest" class="btn btn-tool btn-lg"><i class="fas fa-sign-out-alt"></i></button>
                    </li>
                </ul>
            </nav>
            <aside class="main-sidebar sidebar-dark-primary elevation-4">
                <a href="index3.html" class="brand-link">
                    <img src="AdminLTE/dist/img/AdminLTELogo.png" alt="Leeta Logo" class="brand-image img-circle elevation-3"
                         style="opacity: .8">
                    <span class="brand-text font-weight-light">LEETA</span>
                </a>

                <div class="sidebar">
                    <NavMenu />
                </div>
            </aside>

            <div class="content-wrapper">
                @Body
            </div>

            <footer class="main-footer">
                <strong>LEETA Web Management Console</strong>
                <div class="float-right d-none d-sm-inline-block">
                    <b>Version</b> 1.0.1
                </div>
            </footer>
        </div>
    </Authorized>
</AuthorizeView>

<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="3"
                IconType="IconType.FontAwesome"
                ErrorIcon="fa fa-bug"
                InfoIcon="fa fa-info-circle"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumb-up"
                WarningIcon="fa fa-exclamation-triangle" />

@code {
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (user.Identity == null)
        {
            NavigationManager.NavigateTo("/login");
        }
    }

    private async Task LogoutUserRequest()
    {
        await ServiceProvider.Get<CustomAuthStateProvider>().LogoutAsync();
        NavigationManager.NavigateTo("/login");
    }
}
