@page "/order"
@attribute [Authorize]

@using DataAccessLibrary;
@using DataAccessLibrary.Models;

@inject IOrderData db;
@inject IOrderDetailData detailDb;
@inject IJSRuntime JSRuntime

<AuthorizeView>
    <Authorized>
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-9">
                        <h1 class="m-0 text-dark">Orders</h1>
                    </div>
                </div>
            </div>
        </div>

        <section class="content">
            <div class="container-fluid">
                @*<div class="row mb-3">
                        <div class="col-12">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary active">
                                    <input type="radio" name="options" id="option1" autocomplete="off" checked=""> All
                                </label>
                                <label class="btn btn-secondary">
                                    <input type="radio" name="options" id="option2" autocomplete="off"> Pending
                                </label>
                                <label class="btn btn-secondary">
                                    <input type="radio" name="options" id="option3" autocomplete="off"> Delivered
                                </label>
                            </div>
                        </div>
                    </div>*@
                <div class="row">
                    <div class="col-md-12">
                        @if (list is null)
                        {
                            <p><em>Loading...</em></p>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-12 table-responsive">
                                    <table id="example" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Order No</th>
                                                <th>Date</th>
                                                <th>Contact</th>
                                                <th>Phone</th>
                                                <th>Address</th>
                                                <th>Amount</th>
                                                <th>#</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in list)
                                            {
                                                <tr>
                                                    <td>@item.id</td>
                                                    <td>@item.created_date</td>
                                                    <td>@item.contact_name</td>
                                                    <td>@item.contact_phone</td>
                                                    <td>@item.contact_address</td>
                                                    <td>@item.total_amount @item.currency_symbol</td>
                                                    <td class="text-nowrap col-md-1">
                                                        <button type="submit" class="btn btn-primary btn-icon-anim btn-square"><i class="fa fa-search mt-10" @onclick="() => OpenEditDialog(item)"></i></button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>
    </Authorized>
</AuthorizeView>

@if (ShowEditDialog)
{
    <div class="modal fade show" id="myModal" style="display:block !important; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-lg" style="overflow-y: initial !important">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Order</h4>
                    <button type="button" class="close" @onclick="() => CloseEditDialog()">&times;</button>
                </div>
                <div class="modal-body" style="max-height: calc(100vh - 200px); overflow-y: auto; ">
                    <div class="row invoice-info">
                        <div class="col-sm-8 invoice-col">
                            From
                            <address>
                                <strong>@order.contact_name</strong><br>
                                @order.contact_address<br>
                                Phone: @order.contact_phone<br>
                                Email: @order.contact_email
                            </address>
                        </div>
                        <div class="col-sm-4 invoice-col">
                            <b>Order ID:</b> @order.id<br>
                            <b>Order Date:</b> @order.created_date<br>
                        </div>
                    </div>
                    @if (list is null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-12 table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Status</th>
                                            <th>Product</th>
                                            <th>Qty</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                            <th>#</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in detailList)
                                        {
                                            <tr>
                                                <td>@item.order_status_name</td>
                                                <td>@item.product_name</td>
                                                <td>@item.qty</td>
                                                <td>@item.unit_price.ToString("n2") @item.currency_symbol</td>
                                                <td>@item.total_amount.ToString("n2") @item.currency_symbol</td>
                                                <td class="wrapper col-md-2 col-sm-2">
                                                    @if (item.order_status_id == 1)
                                                    {
                                                        <button type="button" class="btn btn-success btn-xs mr-5" @onclick="() => Accept(item)">Accept</button>
                                                    }
                                                    @if (item.order_status_id < 5)
                                                    {
                                                        <button type="button" class="btn btn-danger btn-xs mr-5" @onclick="() => Reject(item)">Reject</button>
                                                    }
                                                    @if (item.order_status_id > 1 && item.order_status_id < 3)
                                                    {
                                                        <button type="button" class="btn btn-default btn-xs mr-5" @onclick="() => Preparing(item)">Preparing</button>
                                                    }
                                                    @if (item.order_status_id > 1 && item.order_status_id < 4)
                                                    {
                                                        <button type="button" class="btn btn-warning btn-xs mr-5" @onclick="() => Arriving(item)">Arriving</button>
                                                    }
                                                    @if (item.order_status_id > 1 && item.order_status_id < 5)
                                                    {
                                                        <button type="button" class="btn btn-success btn-xs mr-5" @onclick="() => Delivered(item)">Delivered</button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    <div class="row">
                        <div class="col-6">
                        </div>
                        <div class="col-6">
                            <div class="table-responsive">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <th style="width:50%">Subtotal:</th>
                                            <td>@order.sub_total_amount.ToString("n2") @order.currency_symbol</td>
                                        </tr>
                                        <tr>
                                            <th>Shipping:</th>
                                            <td>@order.shipping_amount.ToString("n2") @order.currency_symbol</td>
                                        </tr>
                                        <tr>
                                            <th>Total:</th>
                                            <td>@order.total_amount.ToString("n2") @order.currency_symbol</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Actions
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" @onclick="() => AcceptAll(order)">Accept All</a>
                            <a class="dropdown-item" @onclick="() => RejectAll(order)">Reject All</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" @onclick="e => PreparingAll(order)">Preparing All</a>
                            <a class="dropdown-item" @onclick="e => ArrivingAll(order)">Arriving All</a>
                            <a class="dropdown-item" @onclick="() => DeliveredAll(order)">Delivered All</a>
                        </div>
                    </div>
                    <button type="button" class="btn btn-default" @onclick="() => CloseEditDialog()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<OrderModel> list;
    private List<OrderDetailModel> detailList;
    [Parameter]
    public OrderModel order { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<object>("DataTablesAdd", "#example");
    }

    protected override async Task OnInitializedAsync()
    {
        list = await db.GetList();
    }

    public bool ShowEditDialog { get; set; }
    private async Task OpenEditDialog(OrderModel model)
    {
        order = model;
        detailList = await detailDb.GetList(model.id);
        ShowEditDialog = true;
        StateHasChanged();
    }
    private void CloseEditDialog()
    {
        ShowEditDialog = false;
        StateHasChanged();
    }

    public async Task Accept(OrderDetailModel model)
    {
        await detailDb.SetStatusAccept(model);
        detailList = await detailDb.GetList(model.order_id);
    }

    public async Task Reject(OrderDetailModel model)
    {
        await detailDb.SetStatusReject(model);
        detailList = await detailDb.GetList(model.order_id);
    }

    public async Task Preparing(OrderDetailModel model)
    {
        await detailDb.SetStatusPreparing(model);
        detailList = await detailDb.GetList(model.order_id);
    }

    public async Task Arriving(OrderDetailModel model)
    {
        await detailDb.SetStatusArriving(model);
        detailList = await detailDb.GetList(model.order_id);
    }

    public async Task Delivered(OrderDetailModel model)
    {
        await detailDb.SetStatusDelivered(model);
        detailList = await detailDb.GetList(model.order_id);
    }

    public async Task AcceptAll(OrderModel model)
    {
        await db.SetStatusAcceptAll(model);
        detailList = await detailDb.GetList(model.id);
    }

    public async Task RejectAll(OrderModel model)
    {
        await db.SetStatusRejectAll(model);
        detailList = await detailDb.GetList(model.id);
    }

    public async Task PreparingAll(OrderModel model)
    {
        await db.SetStatusPreparingAll(model);
        detailList = await detailDb.GetList(model.id);
    }

    public async Task ArrivingAll(OrderModel model)
    {
        await db.SetStatusArrivingAll(model);
        detailList = await detailDb.GetList(model.id);
    }

    public async Task DeliveredAll(OrderModel model)
    {
        await db.SetStatusDeliveredAll(model);
        detailList = await detailDb.GetList(model.id);
    }
}
